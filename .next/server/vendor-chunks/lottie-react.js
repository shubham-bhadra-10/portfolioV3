"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lottie-react";
exports.ids = ["vendor-chunks/lottie-react"];
exports.modules = {

/***/ "(ssr)/./node_modules/lottie-react/build/index.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/lottie-react/build/index.es.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LottiePlayer: () => (/* reexport default from dynamic */ lottie_web__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   \"default\": () => (/* binding */ Lottie),\n/* harmony export */   useLottie: () => (/* binding */ useLottie),\n/* harmony export */   useLottieInteractivity: () => (/* binding */ useLottieInteractivity)\n/* harmony export */ });\n/* harmony import */ var lottie_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lottie-web */ \"(ssr)/./node_modules/lottie-web/build/player/lottie.js\");\n/* harmony import */ var lottie_web__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lottie_web__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\n\r\nfunction _iterableToArrayLimit(arr, i) {\r\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\r\n  if (null != _i) {\r\n    var _s,\r\n      _e,\r\n      _x,\r\n      _r,\r\n      _arr = [],\r\n      _n = !0,\r\n      _d = !1;\r\n    try {\r\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\r\n        if (Object(_i) !== _i) return;\r\n        _n = !1;\r\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\r\n    } catch (err) {\r\n      _d = !0, _e = err;\r\n    } finally {\r\n      try {\r\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\r\n      } finally {\r\n        if (_d) throw _e;\r\n      }\r\n    }\r\n    return _arr;\r\n  }\r\n}\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = Object.keys(object);\r\n  if (Object.getOwnPropertySymbols) {\r\n    var symbols = Object.getOwnPropertySymbols(object);\r\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\r\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n    })), keys.push.apply(keys, symbols);\r\n  }\r\n  return keys;\r\n}\r\nfunction _objectSpread2(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = null != arguments[i] ? arguments[i] : {};\r\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\r\n      _defineProperty(target, key, source[key]);\r\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\r\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n    });\r\n  }\r\n  return target;\r\n}\r\nfunction _defineProperty(obj, key, value) {\r\n  key = _toPropertyKey(key);\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n  return obj;\r\n}\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n  return target;\r\n}\r\nfunction _objectWithoutProperties(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = _objectWithoutPropertiesLoose(source, excluded);\r\n  var key, i;\r\n  if (Object.getOwnPropertySymbols) {\r\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n      key = sourceSymbolKeys[i];\r\n      if (excluded.indexOf(key) >= 0) continue;\r\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n  return target;\r\n}\r\nfunction _slicedToArray(arr, i) {\r\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\r\n}\r\nfunction _arrayWithHoles(arr) {\r\n  if (Array.isArray(arr)) return arr;\r\n}\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n  return arr2;\r\n}\r\nfunction _nonIterableRest() {\r\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\nfunction _toPrimitive(input, hint) {\r\n  if (typeof input !== \"object\" || input === null) return input;\r\n  var prim = input[Symbol.toPrimitive];\r\n  if (prim !== undefined) {\r\n    var res = prim.call(input, hint || \"default\");\r\n    if (typeof res !== \"object\") return res;\r\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n  }\r\n  return (hint === \"string\" ? String : Number)(input);\r\n}\r\nfunction _toPropertyKey(arg) {\r\n  var key = _toPrimitive(arg, \"string\");\r\n  return typeof key === \"symbol\" ? key : String(key);\r\n}\r\n\r\nvar _excluded$1 = [\"animationData\", \"loop\", \"autoplay\", \"initialSegment\", \"onComplete\", \"onLoopComplete\", \"onEnterFrame\", \"onSegmentStart\", \"onConfigReady\", \"onDataReady\", \"onDataFailed\", \"onLoadedImages\", \"onDOMLoaded\", \"onDestroy\", \"lottieRef\", \"renderer\", \"name\", \"assetsPath\", \"rendererSettings\"];\r\nvar useLottie = function useLottie(props, style) {\r\n  var animationData = props.animationData,\r\n    loop = props.loop,\r\n    autoplay = props.autoplay,\r\n    initialSegment = props.initialSegment,\r\n    onComplete = props.onComplete,\r\n    onLoopComplete = props.onLoopComplete,\r\n    onEnterFrame = props.onEnterFrame,\r\n    onSegmentStart = props.onSegmentStart,\r\n    onConfigReady = props.onConfigReady,\r\n    onDataReady = props.onDataReady,\r\n    onDataFailed = props.onDataFailed,\r\n    onLoadedImages = props.onLoadedImages,\r\n    onDOMLoaded = props.onDOMLoaded,\r\n    onDestroy = props.onDestroy;\r\n    props.lottieRef;\r\n    props.renderer;\r\n    props.name;\r\n    props.assetsPath;\r\n    props.rendererSettings;\r\n    var rest = _objectWithoutProperties(props, _excluded$1);\r\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),\r\n    _useState2 = _slicedToArray(_useState, 2),\r\n    animationLoaded = _useState2[0],\r\n    setAnimationLoaded = _useState2[1];\r\n  var animationInstanceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\r\n  var animationContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\r\n  /*\r\n        ======================================\r\n            INTERACTION METHODS\r\n        ======================================\r\n     */\r\n  /**\r\n   * Play\r\n   */\r\n  var play = function play() {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\r\n  };\r\n  /**\r\n   * Stop\r\n   */\r\n  var stop = function stop() {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\r\n  };\r\n  /**\r\n   * Pause\r\n   */\r\n  var pause = function pause() {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\r\n  };\r\n  /**\r\n   * Set animation speed\r\n   * @param speed\r\n   */\r\n  var setSpeed = function setSpeed(speed) {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\r\n  };\r\n  /**\r\n   * Got to frame and play\r\n   * @param value\r\n   * @param isFrame\r\n   */\r\n  var goToAndPlay = function goToAndPlay(value, isFrame) {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\r\n  };\r\n  /**\r\n   * Got to frame and stop\r\n   * @param value\r\n   * @param isFrame\r\n   */\r\n  var goToAndStop = function goToAndStop(value, isFrame) {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\r\n  };\r\n  /**\r\n   * Set animation direction\r\n   * @param direction\r\n   */\r\n  var setDirection = function setDirection(direction) {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\r\n  };\r\n  /**\r\n   * Play animation segments\r\n   * @param segments\r\n   * @param forceFlag\r\n   */\r\n  var playSegments = function playSegments(segments, forceFlag) {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\r\n  };\r\n  /**\r\n   * Set sub frames\r\n   * @param useSubFrames\r\n   */\r\n  var setSubframe = function setSubframe(useSubFrames) {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\r\n  };\r\n  /**\r\n   * Get animation duration\r\n   * @param inFrames\r\n   */\r\n  var getDuration = function getDuration(inFrames) {\r\n    var _a;\r\n    return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\r\n  };\r\n  /**\r\n   * Destroy animation\r\n   */\r\n  var destroy = function destroy() {\r\n    var _a;\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\r\n    // Removing the reference to the animation so separate cleanups are skipped.\r\n    // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\r\n    animationInstanceRef.current = undefined;\r\n  };\r\n  /*\r\n        ======================================\r\n            LOTTIE\r\n        ======================================\r\n     */\r\n  /**\r\n   * Load a new animation, and if it's the case, destroy the previous one\r\n   * @param {Object} forcedConfigs\r\n   */\r\n  var loadAnimation = function loadAnimation() {\r\n    var forcedConfigs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    var _a;\r\n    // Return if the container ref is null\r\n    if (!animationContainer.current) {\r\n      return;\r\n    }\r\n    // Destroy any previous instance\r\n    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\r\n    // Build the animation configuration\r\n    var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {\r\n      container: animationContainer.current\r\n    });\r\n    // Save the animation instance\r\n    animationInstanceRef.current = lottie_web__WEBPACK_IMPORTED_MODULE_0___default().loadAnimation(config);\r\n    setAnimationLoaded(!!animationInstanceRef.current);\r\n    // Return a function that will clean up\r\n    return function () {\r\n      var _a;\r\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\r\n      animationInstanceRef.current = undefined;\r\n    };\r\n  };\r\n  /**\r\n   * (Re)Initialize when animation data changed\r\n   */\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\r\n    var onUnmount = loadAnimation();\r\n    // Clean up on unmount\r\n    return function () {\r\n      return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [animationData, loop]);\r\n  // Update the autoplay state\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\r\n    if (!animationInstanceRef.current) {\r\n      return;\r\n    }\r\n    animationInstanceRef.current.autoplay = !!autoplay;\r\n  }, [autoplay]);\r\n  // Update the initial segment state\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\r\n    if (!animationInstanceRef.current) {\r\n      return;\r\n    }\r\n    // When null should reset to default animation length\r\n    if (!initialSegment) {\r\n      animationInstanceRef.current.resetSegments(true);\r\n      return;\r\n    }\r\n    // If it's not a valid segment, do nothing\r\n    if (!Array.isArray(initialSegment) || !initialSegment.length) {\r\n      return;\r\n    }\r\n    // If the current position it's not in the new segment\r\n    // set the current position to start\r\n    if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\r\n      animationInstanceRef.current.currentRawFrame = initialSegment[0];\r\n    }\r\n    // Update the segment\r\n    animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\r\n  }, [initialSegment]);\r\n  /*\r\n        ======================================\r\n            EVENTS\r\n        ======================================\r\n     */\r\n  /**\r\n   * Reinitialize listener on change\r\n   */\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\r\n    var partialListeners = [{\r\n      name: \"complete\",\r\n      handler: onComplete\r\n    }, {\r\n      name: \"loopComplete\",\r\n      handler: onLoopComplete\r\n    }, {\r\n      name: \"enterFrame\",\r\n      handler: onEnterFrame\r\n    }, {\r\n      name: \"segmentStart\",\r\n      handler: onSegmentStart\r\n    }, {\r\n      name: \"config_ready\",\r\n      handler: onConfigReady\r\n    }, {\r\n      name: \"data_ready\",\r\n      handler: onDataReady\r\n    }, {\r\n      name: \"data_failed\",\r\n      handler: onDataFailed\r\n    }, {\r\n      name: \"loaded_images\",\r\n      handler: onLoadedImages\r\n    }, {\r\n      name: \"DOMLoaded\",\r\n      handler: onDOMLoaded\r\n    }, {\r\n      name: \"destroy\",\r\n      handler: onDestroy\r\n    }];\r\n    var listeners = partialListeners.filter(function (listener) {\r\n      return listener.handler != null;\r\n    });\r\n    if (!listeners.length) {\r\n      return;\r\n    }\r\n    var deregisterList = listeners.map(\r\n    /**\r\n     * Handle the process of adding an event listener\r\n     * @param {Listener} listener\r\n     * @return {Function} Function that deregister the listener\r\n     */\r\n    function (listener) {\r\n      var _a;\r\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\r\n      // Return a function to deregister this listener\r\n      return function () {\r\n        var _a;\r\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\r\n      };\r\n    });\r\n    // Deregister listeners on unmount\r\n    return function () {\r\n      deregisterList.forEach(function (deregister) {\r\n        return deregister();\r\n      });\r\n    };\r\n  }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);\r\n  /**\r\n   * Build the animation view\r\n   */\r\n  var View = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", _objectSpread2({\r\n    style: style,\r\n    ref: animationContainer\r\n  }, rest));\r\n  return {\r\n    View: View,\r\n    play: play,\r\n    stop: stop,\r\n    pause: pause,\r\n    setSpeed: setSpeed,\r\n    goToAndStop: goToAndStop,\r\n    goToAndPlay: goToAndPlay,\r\n    setDirection: setDirection,\r\n    playSegments: playSegments,\r\n    setSubframe: setSubframe,\r\n    getDuration: getDuration,\r\n    destroy: destroy,\r\n    animationContainerRef: animationContainer,\r\n    animationLoaded: animationLoaded,\r\n    animationItem: animationInstanceRef.current\r\n  };\r\n};\r\n\r\n// helpers\r\nfunction getContainerVisibility(container) {\r\n  var _container$getBoundin = container.getBoundingClientRect(),\r\n    top = _container$getBoundin.top,\r\n    height = _container$getBoundin.height;\r\n  var current = window.innerHeight - top;\r\n  var max = window.innerHeight + height;\r\n  return current / max;\r\n}\r\nfunction getContainerCursorPosition(container, cursorX, cursorY) {\r\n  var _container$getBoundin2 = container.getBoundingClientRect(),\r\n    top = _container$getBoundin2.top,\r\n    left = _container$getBoundin2.left,\r\n    width = _container$getBoundin2.width,\r\n    height = _container$getBoundin2.height;\r\n  var x = (cursorX - left) / width;\r\n  var y = (cursorY - top) / height;\r\n  return {\r\n    x: x,\r\n    y: y\r\n  };\r\n}\r\nvar useInitInteractivity = function useInitInteractivity(_ref) {\r\n  var wrapperRef = _ref.wrapperRef,\r\n    animationItem = _ref.animationItem,\r\n    mode = _ref.mode,\r\n    actions = _ref.actions;\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\r\n    var wrapper = wrapperRef.current;\r\n    if (!wrapper || !animationItem || !actions.length) {\r\n      return;\r\n    }\r\n    animationItem.stop();\r\n    var scrollModeHandler = function scrollModeHandler() {\r\n      var assignedSegment = null;\r\n      var scrollHandler = function scrollHandler() {\r\n        var currentPercent = getContainerVisibility(wrapper);\r\n        // Find the first action that satisfies the current position conditions\r\n        var action = actions.find(function (_ref2) {\r\n          var visibility = _ref2.visibility;\r\n          return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];\r\n        });\r\n        // Skip if no matching action was found!\r\n        if (!action) {\r\n          return;\r\n        }\r\n        if (action.type === \"seek\" && action.visibility && action.frames.length === 2) {\r\n          // Seek: Go to a frame based on player scroll position action\r\n          var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]);\r\n          //! goToAndStop must be relative to the start of the current segment\r\n          animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\r\n        }\r\n        if (action.type === \"loop\") {\r\n          // Loop: Loop a given frames\r\n          if (assignedSegment === null) {\r\n            // if not playing any segments currently. play those segments and save to state\r\n            animationItem.playSegments(action.frames, true);\r\n            assignedSegment = action.frames;\r\n          } else {\r\n            // if playing any segments currently.\r\n            //check if segments in state are equal to the frames selected by action\r\n            if (assignedSegment !== action.frames) {\r\n              // if they are not equal. new segments are to be loaded\r\n              animationItem.playSegments(action.frames, true);\r\n              assignedSegment = action.frames;\r\n            } else if (animationItem.isPaused) {\r\n              // if they are equal the play method must be called only if lottie is paused\r\n              animationItem.playSegments(action.frames, true);\r\n              assignedSegment = action.frames;\r\n            }\r\n          }\r\n        }\r\n        if (action.type === \"play\" && animationItem.isPaused) {\r\n          // Play: Reset segments and continue playing full animation from current position\r\n          animationItem.resetSegments(true);\r\n          animationItem.play();\r\n        }\r\n        if (action.type === \"stop\") {\r\n          // Stop: Stop playback\r\n          animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\r\n        }\r\n      };\r\n      document.addEventListener(\"scroll\", scrollHandler);\r\n      return function () {\r\n        document.removeEventListener(\"scroll\", scrollHandler);\r\n      };\r\n    };\r\n    var cursorModeHandler = function cursorModeHandler() {\r\n      var handleCursor = function handleCursor(_x, _y) {\r\n        var x = _x;\r\n        var y = _y;\r\n        // Resolve cursor position if cursor is inside container\r\n        if (x !== -1 && y !== -1) {\r\n          // Get container cursor position\r\n          var pos = getContainerCursorPosition(wrapper, x, y);\r\n          // Use the resolved position\r\n          x = pos.x;\r\n          y = pos.y;\r\n        }\r\n        // Find the first action that satisfies the current position conditions\r\n        var action = actions.find(function (_ref3) {\r\n          var position = _ref3.position;\r\n          if (position && Array.isArray(position.x) && Array.isArray(position.y)) {\r\n            return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];\r\n          }\r\n          if (position && !Number.isNaN(position.x) && !Number.isNaN(position.y)) {\r\n            return x === position.x && y === position.y;\r\n          }\r\n          return false;\r\n        });\r\n        // Skip if no matching action was found!\r\n        if (!action) {\r\n          return;\r\n        }\r\n        // Process action types:\r\n        if (action.type === \"seek\" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {\r\n          // Seek: Go to a frame based on player scroll position action\r\n          var xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);\r\n          var yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);\r\n          animationItem.playSegments(action.frames, true);\r\n          animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);\r\n        }\r\n        if (action.type === \"loop\") {\r\n          animationItem.playSegments(action.frames, true);\r\n        }\r\n        if (action.type === \"play\") {\r\n          // Play: Reset segments and continue playing full animation from current position\r\n          if (animationItem.isPaused) {\r\n            animationItem.resetSegments(false);\r\n          }\r\n          animationItem.playSegments(action.frames);\r\n        }\r\n        if (action.type === \"stop\") {\r\n          animationItem.goToAndStop(action.frames[0], true);\r\n        }\r\n      };\r\n      var mouseMoveHandler = function mouseMoveHandler(ev) {\r\n        handleCursor(ev.clientX, ev.clientY);\r\n      };\r\n      var mouseOutHandler = function mouseOutHandler() {\r\n        handleCursor(-1, -1);\r\n      };\r\n      wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\r\n      wrapper.addEventListener(\"mouseout\", mouseOutHandler);\r\n      return function () {\r\n        wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n        wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\r\n      };\r\n    };\r\n    switch (mode) {\r\n      case \"scroll\":\r\n        return scrollModeHandler();\r\n      case \"cursor\":\r\n        return cursorModeHandler();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [mode, animationItem]);\r\n};\r\nvar useLottieInteractivity = function useLottieInteractivity(_ref4) {\r\n  var actions = _ref4.actions,\r\n    mode = _ref4.mode,\r\n    lottieObj = _ref4.lottieObj;\r\n  var animationItem = lottieObj.animationItem,\r\n    View = lottieObj.View,\r\n    animationContainerRef = lottieObj.animationContainerRef;\r\n  useInitInteractivity({\r\n    actions: actions,\r\n    animationItem: animationItem,\r\n    mode: mode,\r\n    wrapperRef: animationContainerRef\r\n  });\r\n  return View;\r\n};\r\n\r\nvar _excluded = [\"style\", \"interactivity\"];\r\nvar Lottie = function Lottie(props) {\r\n  var _a, _b, _c;\r\n  var style = props.style,\r\n    interactivity = props.interactivity,\r\n    lottieProps = _objectWithoutProperties(props, _excluded);\r\n  /**\r\n   * Initialize the 'useLottie' hook\r\n   */\r\n  var _useLottie = useLottie(lottieProps, style),\r\n    View = _useLottie.View,\r\n    play = _useLottie.play,\r\n    stop = _useLottie.stop,\r\n    pause = _useLottie.pause,\r\n    setSpeed = _useLottie.setSpeed,\r\n    goToAndStop = _useLottie.goToAndStop,\r\n    goToAndPlay = _useLottie.goToAndPlay,\r\n    setDirection = _useLottie.setDirection,\r\n    playSegments = _useLottie.playSegments,\r\n    setSubframe = _useLottie.setSubframe,\r\n    getDuration = _useLottie.getDuration,\r\n    destroy = _useLottie.destroy,\r\n    animationContainerRef = _useLottie.animationContainerRef,\r\n    animationLoaded = _useLottie.animationLoaded,\r\n    animationItem = _useLottie.animationItem;\r\n  /**\r\n   * Make the hook variables/methods available through the provided 'lottieRef'\r\n   */\r\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {\r\n    if (props.lottieRef) {\r\n      props.lottieRef.current = {\r\n        play: play,\r\n        stop: stop,\r\n        pause: pause,\r\n        setSpeed: setSpeed,\r\n        goToAndPlay: goToAndPlay,\r\n        goToAndStop: goToAndStop,\r\n        setDirection: setDirection,\r\n        playSegments: playSegments,\r\n        setSubframe: setSubframe,\r\n        getDuration: getDuration,\r\n        destroy: destroy,\r\n        animationContainerRef: animationContainerRef,\r\n        animationLoaded: animationLoaded,\r\n        animationItem: animationItem\r\n      };\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\r\n  return useLottieInteractivity({\r\n    lottieObj: {\r\n      View: View,\r\n      play: play,\r\n      stop: stop,\r\n      pause: pause,\r\n      setSpeed: setSpeed,\r\n      goToAndStop: goToAndStop,\r\n      goToAndPlay: goToAndPlay,\r\n      setDirection: setDirection,\r\n      playSegments: playSegments,\r\n      setSubframe: setSubframe,\r\n      getDuration: getDuration,\r\n      destroy: destroy,\r\n      animationContainerRef: animationContainerRef,\r\n      animationLoaded: animationLoaded,\r\n      animationItem: animationItem\r\n    },\r\n    actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\r\n    mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\"\r\n  });\r\n};\r\n\r\n\r\n//# sourceMappingURL=index.es.js.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/lottie-react/build/index.es.js\n");

/***/ })

};
;